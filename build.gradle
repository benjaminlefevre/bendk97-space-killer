buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath 'com.vanniktech:gradle-dependency-graph-generator-plugin:0.5.0'
    }
}
plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.4'
}

allprojects {
    apply plugin: "idea"
    version = '1.0'
    ext {
        appName = "space-killer"
        gdxVersion = '1.9.10'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.3'
        postprocessingVersion = '1.0.8'
        tweenVersion = '6.3.3'
        appcompat_library_version = '28.0.0'
        support_library_version = '28.0.0'
        gms_library_version = '16.0.0'
        mockitoVersion = '3.0.0'
        junitVersion = '4.12'
        assertJVersion = '3.12.2'
        guavaVersion = '28.0-android'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url 'https://jitpack.io' }
        google()
        jcenter()
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        implementation project(":spaceKiller")
        implementation fileTree(dir: '../libs', include: '*.jar')
        implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
        implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
        implementation "com.android.support:appcompat-v7:${appcompat_library_version}"
        implementation "com.android.support:support-v4:${support_library_version}"
        implementation "com.google.android.gms:play-services-games:${gms_library_version}"
        implementation "com.google.android.gms:play-services-plus:${gms_library_version}"
    }
}

project(":spaceKiller") {
    apply plugin: "java"
    apply plugin: 'com.github.kt3k.coveralls'
    apply plugin: 'jacoco'
    jacocoTestReport {
        reports {
            xml.enabled = true // coveralls plugin depends on xml format report
            html.enabled = true
        }
    }
    dependencies {
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        implementation "com.badlogicgames.ashley:ashley:$ashleyVersion"
        implementation "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        implementation "com.github.Anuken:gdx-postprocessing:$postprocessingVersion"
        implementation "org.mini2Dx:universal-tween-engine:$tweenVersion"
        implementation "com.google.guava:guava:$guavaVersion"
        testImplementation "junit:junit:$junitVersion"
        testImplementation "org.assertj:assertj-core:$assertJVersion"
        testImplementation "org.mockito:mockito-core:$mockitoVersion"
        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        testImplementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    }
}

import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorPlugin
import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorExtension.Generator
import guru.nidi.graphviz.attribute.Color
import guru.nidi.graphviz.attribute.Style

plugins.apply(DependencyGraphGeneratorPlugin)


def mainLibDependenciesGenerator = new Generator(
        "mainLibraries", // Suffix for our Gradle task.
        { dependency ->

            (dependency.getModuleGroup().startsWith("com.google.android.gms")
                    || dependency.getModuleGroup().startsWith("com.badlogic")
                    || dependency.getModuleGroup().startsWith("box2dlights")
                    || dependency.getModuleName().startsWith("universal-tween-engine")
                    || dependency.getModuleGroup().startsWith("com.github.Anuken")
                    || dependency.getModuleName().startsWith("spaceKiller")
            )

        },
        { dependency -> true }, // Include transitive dependencies.
        { node, dependency ->
            if (dependency.getModuleName().startsWith("spaceKiller")) {
                node.add(Style.FILLED, Color.rgb("#FF0000"))
            } else if (dependency.getModuleGroup().startsWith("com.google.android.gms")) {
                node.add(Style.FILLED, Color.rgb("#FBFF28"))
            } else {
                node.add(Style.FILLED, Color.rgb("#232EFF"))
            }
        }
)

dependencyGraphGenerator {
    generators = [mainLibDependenciesGenerator]
}
